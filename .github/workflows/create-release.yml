name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        type: choice
        default: "Alpha"
        options:
          - "Production"
          - "Alpha"
      version_override:
        description: 'Version Override'
        required: false
        type: string
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            EXT: ""
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            EXT: ".exe"
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            EXT: ""

    steps:
      # We need full git history so that the build process can embed it
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build Binary
        run: |
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o faf-pioneer-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.EXT }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: faf-pioneer-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: faf-pioneer-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ matrix.EXT }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Set Version
        id: set_version
        run: |
          if [[ -n "${{ github.event.inputs.version_override }}" ]]; then
            echo "VERSION=${{ github.event.inputs.version_override }}" >> $GITHUB_ENV
          else
            echo "VERSION=$(git describe --tags --always)" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: "Release of version ${{ env.VERSION }} (${{ github.event.inputs.release_type }})"
          draft: true
          prerelease: ${{ github.event.inputs.release_type == 'Alpha' }}
          artifacts: "artifacts/*/*"
